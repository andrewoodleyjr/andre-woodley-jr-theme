<!DOCTYPE html>
<html class='no-js'>
  <head>
    <title>{{ request.page_title }}</title>

    <meta content='width=device-width,initial-scale=1' name='viewport'>

    {% comment %}
    This provides Posthaven built meta description, Facebook Open Graph and Twitter Card
    <meta> tags.
    {% endcomment %}
    {{ meta_tags }}

    <link
    href="{{ 'images/favicon.ico' | asset_url }}"
      rel='shortcut icon'
      type='image/x-icon'>
    <!--[if IE]>
    <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    {{ 'blog.css' | asset_url | stylesheet_tag }}

    {% comment %} This Required for internal Posthaven functionality to work!.  {% endcomment %}
    {{ posthaven.includes_for_head }}


    <style > :root
    {
      /* Light mode colors */
      --bg-color: {{ settings.light_color }}
      ;
      --text-color: {{ settings.dark_color }}
      ;

      /* Dark mode colors */
      --bg-color-dark: {{ settings.dark_color }}
      ;
      --text-color-dark: {{ settings.light_color }}
      ;
    }

    body {
      background-color: var(--bg-color);
      color: var(--text-color);
    }

    body.dark-mode {
      background-color: var(--bg-color-dark) !important;
      color: var(--text-color-dark) !important;
    }
  </style>
  <script>
    setTimeout(() => {
      const body = document.body;
      const sunIcon = document.querySelector('.icon-sun');
      const moonIcon = document.querySelector('.icon-moon');

      function saveData(key, value) { // Saving data to local storage
        try {
          localStorage.setItem(key, value);
        } catch (e) { // console.error('Error saving data to local storage:', e);
        }
      }

      function getData(key) { // Retrieving data from local storage
        try {
          const value = localStorage.getItem(key);
          if (value === null) { // console.log('No data found for the given key');
            return null;
          }
          return value;
        } catch (e) { // console.error('Error retrieving data from local storage:', e);
        }
      }

      function useDarkTheme(bool) {
        if (bool) {
          body.classList.add('dark-mode');
          saveData('useDarkTheme', true);
          sunIcon.classList.add('white-icon');
          moonIcon.classList.add('white-icon');
        } else {
          body.classList.remove('dark-mode');
          saveData('useDarkTheme', false);
          sunIcon.classList.remove('white-icon');
          moonIcon.classList.remove('white-icon');
        }
      }

      const retrievedValue = getData('useDarkTheme');

      if (retrievedValue === 'true') { // user has previously selected dark mode
        useDarkTheme(true);
        document.getElementById('toggle').checked = true;
      } else if (retrievedValue === null && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) { // User prefers dark mode
        useDarkTheme(true);
        document.getElementById('toggle').checked = true;
      } else { // User prefers light mode or has not selected a preference
        useDarkTheme(false);
        document.getElementById('toggle').checked = false;
      }



      document.getElementById('toggle').addEventListener('change', (e) => {
        if (e.target.checked) { // Code to execute when the toggle is switched to the moon
          useDarkTheme(true)
        } else { // Code to execute when the toggle is switched back to the sun
          useDarkTheme(false)
        }
      });
    }, 100)
  </script>
</head>
<body class='site-{{ site.id }}'>

  <header>
    {% include 'alerts' %}

    <div>
      <h1>
        <a href="{{ site.url }}">{{ settings.title | smarty_pants }}</a>
      </h1>

      {% unless settings.tagline == empty %}
        <h3>
          <a href="{{ site.url }}">{{ settings.tagline | smarty_pants }}</a>
        </h3>
      {% endunless %}
    </div>

    {% include 'nav_menu' %}

    <div class="toggle-div">
      <div class="toggle-container">
        <input
          type="checkbox"
          id="toggle"
          class="toggle-input">
        <label for="toggle" class="toggle-label">
          <img
            src="{{ 'svgs/sun.svg' | asset_url }}"
            alt="Sun"
            id="sun"
            class="icon-sun">
          <img
            src="{{ 'svgs/moon.svg' | asset_url }}"
            alt="Moon"
            id="moon"
            class="icon-moon">
        </label>
      </div>
    </div>
  </header>


  <main>
    {{ content_for_layout }}
  </main>

  <footer>
    <p class="paragraph left">
      {{ settings.contact }}
    </p>
    <!-- {{ posthaven.user_menu }} -->
    <p class="paragraph">Â© 2022 {{ "now" | date: "%Y" }}</p>
  </footer>

  {% comment %} This Required for internal Posthaven functionality to work!.  {% endcomment %}
  {{ posthaven.includes_for_body }}</body></html>